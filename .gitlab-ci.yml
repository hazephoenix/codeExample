image: openjdk:11.0.4-jdk

variables:
  ssh-user: dh-central-server
  server-addr: 84.201.154.121
  service-name: dh-central-server-dev
  install-path: ~/develop
  port: 8080



before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)
  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  ##
  - echo "$SSH_KNOWN_HOSTS_DH_STAGE" > ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
stages:
  #  - build
  - deploy

#build:
#  stage: build
#  script: ./gradlew build -Penvironment=$ENVIRONMENT
#  artifacts:
#    paths:
#      - applications/dh-central-server-app/build/libs/dh-central-server-app.jar
#      - applications/dh-paramedic-device-app/build/libs/dh-paramedic-device-app.jar

dh-stage-master:
  stage: deploy
  script:
    - ssh $ssh-user@$server-addr "systemctl stop $service-name"
#    - scp ./applications/dh-central-server-app/build/libs/dh-central-server-app.jar $ssh-user@$server-addr:$install-path/dh-central-server-app.jar
#    - scp ./applications/dh-central-server-app/environment/dh-stage/application.properties $ssh-user@$server-addr:$install-path/application.properties
#    - ssh $ssh-user@$server-addr "chmod u+x $install-path/dh-central-server-app.jar"
    - ssh $ssh-user@$server-addr "systemctl start $service-name"
  #    - TODO check
  only:
    - master